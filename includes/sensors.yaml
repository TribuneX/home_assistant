##########################
# Sensors
##########################

# Inspired by https://github.com/CCOSTAN/Home-AssistantConfig/blob/9b088e5bee97d242463b7d794edeb4a1d967bac1/sensor/devices_states.yaml
- platform: template
  sensors:
    # Inspired by https://community.home-assistant.io/t/temp-compare/19497
    livingroom_out_vs_in:
      value_template: "{{ (states('sensor.outdoor_temperature') | float) - (states('sensor.livingroom_temperature') | float) }}"
      friendly_name: "Temperature Diff"
      unit_of_measurement: '°C'

    bedroom_out_vs_in:
      value_template: "{{ (states('sensor.outdoor_temperature') | float) - (states('sensor.bedroom_temperature') | float) }}"
      friendly_name: "Temperature Diff"
      unit_of_measurement: '°C'

    office_out_vs_in:
      value_template: "{{ (states('sensor.outdoor_temperature') | float) - (states('sensor.office_temperature') | float) }}"
      friendly_name: "Temperature Diff"
      unit_of_measurement: '°C'

    robo:
      friendly_name: "Robo"
      value_template: "{{ 'online' if is_state('device_tracker.robot', 'home') else 'off' }}"

    epson:
      friendly_name: "Epson"
      value_template: "{{ 'online' if is_state('device_tracker.epson', 'home') else 'off' }}"

    plex:
      friendly_name: "Plex"
      value_template: "{{ 'online' if is_state('device_tracker.plex', 'home') else 'off' }}"

    switch:
      friendly_name: "Switch"
      value_template: "{{ 'online' if is_state('device_tracker.switch', 'home') else 'off' }}"

    appletv_bedroom:
      friendly_name: "AppleTV Bedroom"
      value_template: "{{ 'online' if is_state('device_tracker.appletvschlafzimmer', 'home') else 'off' }}"

    appletv_livingroom:
      friendly_name: "AppleTV Livingroom"
      value_template: "{{ 'online' if is_state('device_tracker.appletvwohnzimmer', 'home') else 'off' }}"

    server:
      friendly_name: "Server"
      value_template: "{{ 'online' if is_state('device_tracker.server', 'home') else 'off' }}"

    watering_rasen:
      friendly_name: "Bewässerung Rasen"
      unit_of_measurement: "l/min"
      value_template: "{{8.8 if is_state('switch.garden_water_valve', 'on') and is_state('input_select.garden_water_zone', 'Rasen') else 0 }}"

    watering_hecke:
      friendly_name: "Bewässerung Hecke"
      unit_of_measurement: "l/min"
      value_template: "{{6.6 if is_state('switch.garden_water_valve', 'on') and is_state('input_select.garden_water_zone', 'Hecke') else 0 }}"

    watering_blumenbeet:
      friendly_name: "Bewässerung Blumenbeet"
      unit_of_measurement: "l/min"
      value_template: "{{1.5 if is_state('switch.garden_water_valve', 'on') and is_state('input_select.garden_water_zone', 'Blumenbeet') else 0 }}"

    watering_rasen_klein:
      friendly_name: "Bewässerung Rasen (klein)"
      unit_of_measurement: "l/min"
      value_template: "{{2.34 if is_state('switch.garden_water_valve', 'on') and is_state('input_select.garden_water_zone', 'Rasen (klein)') else 0 }}"


    robot_dust_bin:
      friendly_name: "Robot dust bin"
      value_template: >
        {% if ( (is_state('input_boolean.cleaned_today', 'on')) and (is_state('group.user_1', 'home')) ) %}
        full
        {% else %}
        empty
        {% endif %}

    # energy
    energy_all_total:
      unit_of_measurement: "kWh"
      value_template: "{{ (states('sensor.energy_all_total_wh')|float / 1000 ) | round(1) }}"
      device_class: energy
      friendly_name: "WHG Total"

    energy_all_ht:
      unit_of_measurement: "kWh"
      value_template: "{{ (states('sensor.energy_all_ht_wh')|float / 1000 ) | round(1) }}"
      device_class: energy
      friendly_name: "WHG HT"

    energy_all_nt:
      unit_of_measurement: "kWh"
      value_template: "{{ (states('sensor.energy_all_nt_wh')|float / 1000 ) | round(1) }}"
      device_class: energy
      friendly_name: "WHG NT"

# - platform: command_line
#   name: Mein Schiff Ostsee
#   command: /usr/bin/curl -s https://www.pooldeck24.de/mein-schiff/mein-schiff-buchen/mein-schiff-flexpreise | grep "Ostsee mit St. Petersburg II" -A 2 | grep -o '[0-9]\.[0-9]\+' | tr -d '.'
#   unit_of_measurement: '€'
#   scan_interval: 120

- platform: time_date
  display_options:
    - 'date_time'

- platform: integration
  source: sensor.watering_rasen
  name: watering_rasen_amount
  unit_time: min
  method: left
  max_sub_interval:
    minutes: 1

- platform: integration
  source: sensor.watering_hecke
  name: watering_hecke_amount
  unit_time: min
  method: left
  max_sub_interval:
    minutes: 1

- platform: integration
  source: sensor.watering_blumenbeet
  name: watering_blumenbeet_amount
  unit_time: min
  method: left
  max_sub_interval:
    minutes: 1

- platform: integration
  source: sensor.watering_rasen_klein
  name: watering_rasen_klein_amount
  unit_time: min
  method: left
  max_sub_interval:
    minutes: 1

- platform: history_stats
  name: Rainsensor flips
  entity_id: binary_sensor.rain_sensor
  state: 'off'
  type: count
  start: '{{ now().replace(hour=0, minute=0, second=0) }}'
  end: '{{ now() }}'

- platform: statistics
  name: "Rainfall last 24 hours"
  entity_id: sensor.rainfall_today
  state_characteristic: change
  max_age:
    hours: 24
