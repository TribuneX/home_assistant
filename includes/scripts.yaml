##########################
# Skripte
##########################

restart_hass:
  alias: Restart Home Assistant
  sequence:
    - service: script.prepare_restart
    - service: script.git_pull
    - service: shell_command.restart_hass

prepare_restart:
  alias: Prepare for restart
  sequence:
    - service: homeassistant.turn_on
      entity_id: group.all_speaker

git_pull:
  alias: Update Configuration
  sequence:
    - service: switch.turn_on
      entity_id: switch.gitpull

reload_automations:
  alias: Reload Automations
  sequence:
    - alias: Reload-Automations
      service: automation.reload

init_hass:
  alias: Init HASS
  sequence:
    - delay:
        seconds: 10
    - service: input_select.select_option
      data:
        entity_id: input_select.log_level
        option: "fatal"

init_tv:
  alias: "Init TV"
  sequence:
    # - condition: or
    #   conditions:
    #   - condition: state
    #     entity_id: media_player.wohnzimmer
    #     state: 'paused'
    #   - condition: state
    #     entity_id: media_player.wohnzimmer
    #     state: 'idle'
    - service: switch.turn_off
      entity_id: switch.tv

init_tv_2:
  alias: "Init TV2"
  sequence:
    # - condition: or
    #   conditions:
    #   - condition: state
    #     entity_id: media_player.schlafzimmer
    #     state: 'paused'
    #   - condition: state
    #     entity_id: media_player.schlafzimmer
    #     state: 'idle'
    - service: switch.turn_off
      entity_id: switch.tv_2

init_sonos:
  alias: "Init Sonos speaker"
  sequence:
    - service: homeassistant.turn_off
      entity_id: group.all_speaker

turn_on_vacation_lights:
  alias: Vacation Light Mode
  sequence:
    - service: notify.devices_user_1
      data:
        title: "Vacation mode"
        message: "I switched on the lights while you are on vacation"
    - service: light.turn_on
      entity_id: light.sofa
    - delay:
        minutes: "{{range(1, 5)|random}}"
    - service: light.turn_on
      entity_id: light.office
    - delay:
        minutes: "{{ range(20, 40)|random }}"
    - service: light.turn_off
      entity_id: light.sofa
    - delay:
        minutes: "{{range(1, 5)|random}}"
    - service: light.turn_off
      entity_id: light.office

turn_off_livingroom_delay_10:
  alias: "Turn off livingroom group (delay 10 minutes)"
  sequence:
    - delay:
        minutes: 10
    - service: light.turn_off
      entity_id: light.sofa
    - service: script.turn_off_christmas

turn_off_livingroom:
  alias: "Turn off livingroom group"
  sequence:
    - service: light.turn_off
      entity_id: light.sofa
    - service: script.turn_off_christmas

turn_off_bedroom_delay_120:
  alias: "Turn off bedroom (delay 120 minutes)"
  sequence:
    - delay:
        minutes: 120
    - service: homeassistant.turn_off
      entity_id: group.bed_room

pause_all_media:
  sequence:
    - service: script.pause_sonos
    - service: media_player.turn_on
      entity_id: media_player.wohnzimmer
    - service: media_player.media_stop
      entity_id: media_player.wohnzimmer

pause_sonos:
  sequence:
    - service: media_player.media_pause
      entity_id: media_player.living_room

play_sonos:
  sequence:
    - service: homeassistant.turn_on
      entity_id: group.all_speaker
    - service: media_player.media_play
      entity_id: media_player.living_room

play_sonos_radio:
  sequence:
    - service: input_select.select_option
      data:
        entity_id: input_select.sonos_source
        option: "HIT RADIO FFH"
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room
        volume_level: "{{ volume|default(0.1) }}"
    - delay:
        seconds: 35
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room
        volume_level: "{{ volume|default(0.1) }}"

# turn_off_fan_after_delay:
#   sequence:
#     - delay:
#         hours: 2
#     - service: fan.turn_off
#       entity_id: fan.fan

turn_off_all:
  sequence:
    - service: light.turn_off
      entity_id: all
    - delay:
        seconds: 5
    - service: switch.turn_off
      entity_id:
        - switch.sonos_playbar
        - switch.speaker_1
        - switch.speaker_2
        - switch.tv_2

turn_on_livingroom_default_lights:
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.sofa

turn_off_living_room_lights:
  sequence:
    - service: light.turn_off
      data:
        entity_id: light.sofa

start_vacuum_cleaning:
  alias: "Start the vacuum"
  sequence:
    - service: vacuum.start
      entity_id: vacuum.vacuum_cleaner

# Inspired by https://github.com/arsaboo/homeassistant-config/blob/master/scripts.yaml
sonos_say:
  alias: "Sonos TTS script"
  sequence:
    - service: media_player.sonos_snapshot
      data_template:
        entity_id: "{{ sonos_entity|default('media_player.living_room') }}"
    - service: media_player.sonos_unjoin
      data_template:
        entity_id: "{{ sonos_entity|default('media_player.living_room') }}"
    - service: media_player.volume_set
      data_template:
        entity_id: "{{ sonos_entity|default('media_player.living_room') }}"
        volume_level: "{{ volume|default(0.4) }}"
    - service: tts.google_say
      data_template:
        entity_id: "{{ sonos_entity|default('media_player.living_room') }}"
        message: "{{ message }}"
    - delay: "{{ delay|default('00:00:00') }}"
    - wait_template: "{{ is_state(sonos_entity|default('media_player.living_room'), 'playing') }}"
      timeout: "00:00:05"
    - wait_template: "{{ not is_state(sonos_entity|default('media_player.living_room'), 'playing') }}"
      timeout: "00:00:20"
    - service: media_player.sonos_restore
      data_template:
        entity_id: "{{ sonos_entity|default('media_player.living_room') }}"

turn_on_christmas:
  sequence:
    - condition: state
      entity_id: input_boolean.christmas
      state: "on"
    - service: homeassistant.turn_on
      entity_id: group.christmas

turn_off_christmas:
  sequence:
    - condition: state
      entity_id: input_boolean.christmas
      state: "on"
    - service: homeassistant.turn_off
      entity_id: group.christmas

open_all_covers:
  sequence:
    - service: cover.open_cover
      entity_id: cover.office
    - delay:
        seconds: 10
    - service: cover.open_cover
      entity_id: cover.livingroom_front
    - if:
        - condition: numeric_state
          entity_id: "sensor.openweathermap_temperature"
          below: "20"
      then:
        - service: cover.open_cover
          entity_id: cover.side
      else:
        - service: cover.set_cover_position
          data:
            entity_id: cover.side
            position: 40
        - delay:
            minutes: 90
        - service: cover.open_cover
          entity_id: cover.side

close_all_covers:
  sequence:
    - service: cover.close_cover
      entity_id: cover.livingroom_coach_right
    - delay:
        minutes: 30
    - service: cover.close_cover
      entity_id: cover.kitchen
    - delay:
        seconds: 10
    - service: cover.close_cover
      entity_id: cover.office
    - delay:
        seconds: 10
    - service: cover.close_cover
      entity_id: cover.livingroom_small
    - delay:
        minutes: 10
    - service: cover.close_cover
      entity_id: cover.livingroom_front


close_front_covers:
  sequence:
    - condition: numeric_state
      entity_id: sensor.openweathermap_temperature
      above: 25
    - condition: template
      value_template: '{{ state_attr("cover.front", "current_position") == 100 }}'
    - service: cover.set_cover_position
      data:
        entity_id: cover.front
        position: 30

open_front_covers:
  sequence:
    - condition: template
      value_template: '{{ state_attr("cover.front", "current_position") == 30 }}'
    - service: cover.open_cover
      entity_id: cover.front

close_covers_for_tv:
  sequence:
    - condition: state
      entity_id: cover.livingroom_tv
      state: "open"
    - service: cover.set_cover_position
      data:
        entity_id: cover.livingroom_tv
        position: 50

open_covers_for_tv:
  sequence:
    - condition: state
      entity_id: switch.cover_coach
      state: "off"
    - condition: template
      value_template: '{{ state_attr("cover.livingroom_tv", "current_position") == 50 }}'
    - service: cover.open_cover
      entity_id: cover.livingroom_tv

disable_alarm:
  sequence:
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.alarm
        code: 1234

enable_alarm:
  sequence:
    - service: alarm_control_panel.alarm_arm_away
      data:
        entity_id: alarm_control_panel.alarm
        code: 1234

apple_tv_sleep:
  alias: "Make the Apple TV & TV sleep"
  sequence:
    - service: remote.send_command
      target:
        entity_id: remote.wohnzimmer
      data:
        delay_secs: 1
        command:
          - home_hold
          - select
    - service: media_player.turn_off
      target:
        entity_id: media_player.wohnzimmer

turn_on_tv_and_playbar:
  sequence:
    - service: switch.turn_on
      data:
        entity_id:
          - switch.sonos_playbar
    - service: script.turn_on_tv

turn_off_tv_and_playbar:
  sequence:
    - service: switch.turn_off
      data:
        entity_id:
          - switch.sonos_playbar
    - service: script.turn_off_tv

turn_on_tv:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.wohnzimmer
        command:
          - menu

turn_off_tv:
  sequence:
    - service: script.apple_tv_sleep

toggle_speaker_and_light_childroom:
  sequence:
    - service: switch.toggle
      entity_id: switch.speaker_1
    - condition: state
      entity_id: binary_sensor.dark_outside
      state: "on"
    - service: light.toggle
      entity_id: light.child

watering_garden:
  sequence:
    - service: script.water_zone
      data:
        water_period: "{{ rasen_period | default('00:00:20') }}"
    - service: script.water_zone
      data:
        water_period: "{{ hecke_period | default('00:00:20') }}"
    - service: script.water_zone
      data:
        water_period: "{{ blumenbeet_period | default('00:00:20') }}"
    - service: script.water_zone
      data:
        water_period: "{{ rasen_klein_period | default('00:00:20') }}"

water_zone:
  sequence:
    - if:
        - condition: template
          value_template: "{{ water_period != '00:00:20' }}"
      then:
        - service: notify.devices_user_1
          data:
            title: "Garden"
            message: "Watering {{ states('input_select.garden_water_zone') }} for {{ water_period }}"
    - service: switch.turn_on
      entity_id: switch.garden_water_valve
    - delay: "{{ water_period }}"
    - service: switch.turn_off
      entity_id: switch.garden_water_valve
    - delay:
        seconds: 20

watering_blumenbeet:
  sequence:
    - service: script.watering_garden
      data:
        blumenbeet_period: '00:30:00'
