##########################
# Automations 
##########################

- alias: 'Nicole left'
  hide_entity: True
  trigger:
    platform: state
    entity_id: device_tracker.nicolesiphone
    # Optional 
    from: 'home'
    to: 'not_home'
  action:
    - service: notify.ios_iphones
      data:
        title: 'Location'
        message: 'Nicole left.'

- alias: 'Nicole arrived'
  hide_entity: True
  trigger:
    platform: state
    entity_id: device_tracker.nicolesiphone
    # Optional 
    from: 'not_home'
    to: 'home'
  action:
    - service: notify.ios_iphones
      data:
        title: 'Location'
        message: 'Nicole arrived.'

- alias: 'Water Bad' 
  hide_entity: True
  trigger:
    platform: state
    entity_id: device_tracker.iphones
    from: 'not_home'
    to: 'home'
  condition:
    condition: numeric_state
    entity_id: sensor.bad_moisture
    below: 20
  action:
    - service: notify.ios_iphones
      data:
        title: 'Plants'
        message: 'Please water bad plant! Moisture: {{states.sensor.bad_moisture.state}}% | Light: {{states.sensor.bad_light_intensity.state}} lux | Conductivity: {{states.sensor.bad_conductivity.state}}'

- alias: 'Water Sanseviera' 
  hide_entity: True
  trigger:
    platform: state
    entity_id: device_tracker.iphones
    from: 'not_home'
    to: 'home'
  condition:
    condition: numeric_state
    entity_id: sensor.sanseviera_moisture
    below: 16
  action:
    - service: notify.ios_iphones
      data:
        title: 'Plants'
        message: 'Please water Sanseviera! Moisture: {{states.sensor.sanseviera_moisture.state}}% | Light: {{states.sensor.sanseviera_light_intensity.state}} lux | Conductivity: {{states.sensor.sanseviera_conductivity.state}}'

- alias: 'Water Palm'
  hide_entity: True 
  trigger:
    platform: state
    entity_id: device_tracker.iphones
    from: 'not_home'
    to: 'home'
  condition:
    condition: numeric_state
    entity_id: sensor.palme_moisture
    below: 20
  action:
    - service: notify.ios_iphones
      data:
        title: 'Plants'
        message: 'Please water Palm! Moisture: {{states.sensor.palme_moisture.state}}% | Light: {{states.sensor.palme_light_intensity.state}} lux | Conductivity: {{states.sensor.palme_conductivity.state}}'

- alias: 'CO2 Bedroom'
  hide_entity: True
  trigger:
    platform: numeric_state
    entity_id: sensor.netatmo_schlafzimmer_co2
    above: 900
  action:
    - service: notify.ios_iphones
      data:
        title: 'Rooms'
        message: 'High CO2 in bedroom Currently: {{states.sensor.netatmo_schlafzimmer_co2.state}}ppm'

- alias: 'CO2 Livingroom'
  hide_entity: True
  trigger:
    platform: numeric_state
    entity_id: sensor.netatmo_wohnzimmer_co2
    above: 900
  action:
    - service: notify.ios_iphones
      data:
        title: 'Rooms'
        message: 'High CO2 in bedroom Currently: {{states.sensor.netatmo_schlafzimmer_co2.state}}ppm'

- alias: 'Noise Livingroom'
  hide_entity: True
  trigger:
    platform: numeric_state
    entity_id: sensor.netatmo_wohnzimmer_noise
    above: 65
  action:
    - service: notify.ios_iphones
      data:
        title: 'Rooms'
        message: 'It is quite noise. Currently: {{states.sensor.netatmo_wohnzimmer_noise.state}}db'

- alias: 'Update Available Notifications'
  hide_entity: True
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    - service: notify.ios_iphones
      data:
        title: 'Update'
        message: 'Update for Home Assistant is available.'

- alias: 'Power off all'
  hide_entity: True
  trigger:
      platform: time
      after: '03:00'
  action:
    service: switch.turn_off

- alias: 'Nobody at home'
  hide_entity: True
  trigger:
    platform: state
    entity_id: group.personen
    from: 'home'
    to: 'not_home'
    for:
      minutes: 5 
  action:
    - service: notify.ios_iphones
      data:
        title: 'Location'
        message: 'Everybody left. I will switch off all devices.'
    - service: switch.turn_off

- alias: 'Livingroom lights at sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:30:00'
    - platform: state
      entity_id: group.personen
      from: 'not_home'
      to: 'home'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.personen
        state: 'home'
      - condition: sun
        after: sunset
        after_offset: '-00:30:00'
  action:
    - service: light.turn_on
      data: 
        entity_id: group.wohzimmer_lampen
        brightness: 150

- alias: 'Weather Report'
  trigger:
    platform: time
    after: '07:30'
  action:
    - service: notify.ios_iphones
      data:
        title: 'Weather Report for today'
        message: 'Current: {{states.sensor.netatmo_outdoor_temperature.state}}°C 
        H/L: {{states.sensor.dark_sky_daily_high_temperature.state}}°C/{{states.sensor.dark_sky_daily_low_temperature.state}}°C 
        {{states.sensor.dark_sky_hourly_summary.state}}'       
  
# Vacation Mode 
# Inspired by https://github.com/ronmarco/home-assistant-config/blob/master/yaml_automation/status-vacation.yaml

# Turn vacation mode on automatically
- alias: 'Turn on vacation mode when nobody is home for more than 24 hours'
  trigger:
    - platform: state
      entity_id: group.personen
      from: 'home'
      to: 'not_home'
      for:
        hours: 24
        minutes: 0
        seconds: 0
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.vacation_mode
    - service: notify.ios_iphones
      data:
        title: 'Vacation mode'
        message: 'I did not see anybody within the last 24 hours. I will switch on the vacation mode'

# Turn vacation mode off automatically
- alias: 'Turn vacation mode off when home'
  trigger:
    - platform: state
      entity_id: group.personen 
      from: 'not_home'
      to: 'home'
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.vacation_mode
    - service: notify.ios_iphones
      data:
        title: 'Vacation mode'
        message: 'Welcome back! I switched off the vacation mode'

# Turn on lights when vacation mode active
- alias: 'Turn on vacation lights at sunset when vacation mode on'
  trigger:
    - platform: state
      entity_id: sun.sun
      from: 'above_horizon'
      to: 'below_horizon'
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'
  action:
    - service: script.vacation_lights

# Turn on light at Sofa if ATV is paused
- alias: 'Turn on light when AppleTV is paused'
  trigger:
    - platform: state
      entity_id: media_player.wohnzimmer
      from: 'playing'
      to: 'paused'
      for:
        seconds: 2
  condition:
    condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
    - service: light.turn_on
      data: 
        entity_id: group.wohzimmer_lampen
        brightness: 150

# Turn on light at Sofa if ATV is paused
- alias: 'Turn off light when AppleTV is played'
  trigger:
    - platform: state
      entity_id: media_player.wohnzimmer
      from: 'paused'
      to: 'playing'  
  condition:
    condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
    - service: light.turn_on
      data: 
        entity_id: group.wohzimmer_lampen
        brightness: 20

# Turn of devices in the bedroom 30 minutes when switched on after 23:00
- alias: '45 minutes timer for devices at night'
  trigger:
    - platform: state
      entity_id: group.schlafzimmer
      from: 'off'
      to: 'on'
  condition:
    condition: time
    after: '23:00'
    before: '05:00'
  action:
    - service: script.turn_off_bedroom_delay_45
    #- service: notify.ios_iphones
    #  data:
    #    title: 'Timer'
    #    message: 'I will turn off the devices in the bedroom in 45 minutes'

# Turn off devices in the livingroom 15 minutes when switched on after 3:01
- alias: '15 minutes timer for devices at night'
  trigger:
    - platform: state
      entity_id: group.wohnzimmer
      from: 'off'
      to: 'on'
  condition:
    condition: time
    after: '03:01'
    before: '05:00'
  action:
    - service: script.turn_off_livingroom_delay_15
    #- service: notify.ios_iphones
    #  data:
    #    title: 'Timer'
    #    message: 'I will turn off the devices in the livingroom in 15 minutes'

- alias: 'Switch on TV if it was turned on by another remote'
  trigger: 
    - platform: state
      entity_id: device_tracker.broadlink
      from: 'not home'
      to: 'home'
  action:
    - service: switch.turn_on
      entity_id: switch.tv

# Turn on lights in bedroom, if TV is switched off
- alias: 'Turn on lights in bedroom after TV is switched off'
  trigger:
    - platform: state
      entity_id: switch.tv
      from: 'on'
      to: 'off'
  condition:
    condition: time
    after: '21:00'
    before: '05:00'
  action: 
    - service: switch.turn_on
      entity_id: switch.light_sascha
    - service: switch.turn_on
      entity_id: switch.light_nicole 

# Turn off lights in livingroom after TV is switched off
- alias: 'Turn off lights in livingroom after TV is switched off'
  trigger:
    - platform: state
      entity_id: switch.tv
      from: 'on'
      to: 'off'
  condition:
    condition: time
    after: '21:00'
    before: '05:00'
  action: 
    - service: script.turn_off_livingroom_delay_15
    - service: notify.ios_iphones
      data:
        title: 'Timer'
        message: 'I will turn of the lights in 15 minutes. Good Night.'
  
# Trigger alarm if motion is detected, altough noboby is home   
- alias: 'Alarm'    
  trigger:    
    - platform: state     
      entity_id: light.lampe_sofa   
      from: 'off'   
      to: 'on'    
  condition:    
    condition: state    
    entity_id: group.personen   
    state: 'not home'   
  action:     
    - service: notify.ios_iphones   
      data:   
        title: 'Alarm'    
        message: 'Motion was detected, but nobody seems to be at home!'

- alias: 'watch AppleTV'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'AppleTV'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'on'
  action:
    - service: script.input_apple_tv

- alias: 'watch FireTV'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'FireTV'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'on'
  action:
    - service: script.input_fire_tv

- alias: 'watch TV'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'Fernseher'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'on'
  action:
    - service: script.input_tv

- alias: 'listen to music'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'Music'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'on'
  action:
    - service: script.input_music

- alias: 'watch AppleTV + TV'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'AppleTV'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.tv
    - delay:
        seconds: 20
    - service: script.input_apple_tv

- alias: 'watch FireTV + TV'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'FireTV'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.tv
    - delay:
        seconds: 20
    - service: script.input_fire_tv

- alias: 'watch TV + TV'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'Fernseher'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.tv
    - delay:
        seconds: 20
    - service: script.input_tv

- alias: 'listen to music'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'Music'
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.tv
    - delay:
        seconds: 20
    - service: script.input_music

- alias: 'Turn off TV'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
    to: 'AUS'
  action:
    - service: switch.turn_off
      entity_id: switch.tv

- alias: 'Turn on TV if media is played'
  trigger: 
    - platform: state
      entity_id: media_player.wohnzimmer
      from: 'paused'
      to: 'playing' 
  condition:
    condition: state
    entity_id: input_select.tv_mode
    state: 'AUS'
  action:
    - service: switch.turn_on
      entity_id: switch.tv
    - delay:
        seconds: 20
    - service: script.input_music
    - service: input_select.select_option
      data:
        entity_id: input_select.tv_mode
        option: Music

