- alias: 'Media: Select mode'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'on'
  action:
    - service: script.turn_on 
      data_template:
        entity_id: >
          {% if trigger.to_state.state == 'AppleTV' %}
            script.input_apple_tv
          {% elif trigger.to_state.state == 'TV' %}
            script.input_tv
          {% elif trigger.to_state.state == 'Plex' %}
            script.input_plex
          {% elif trigger.to_state.state == 'Music' %}
            script.input_music
          {% elif trigger.to_state.state == 'AUS' %}
            script.turn_off_tv_livingroom
          {% endif %}

- alias: 'Media: Select mode + TV'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.tv_mode
  condition:  
   condition: state
   entity_id: switch.tv
   state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.tv
    - delay:
        seconds: 12
    - service: script.turn_on 
      data_template:
        entity_id: >
          {% if trigger.to_state.state == 'AppleTV' %}
            script.input_apple_tv
          {% elif trigger.to_state.state == 'TV' %}
            script.input_tv
          {% elif trigger.to_state.state == 'Plex' %}
            script.input_plex
          {% elif trigger.to_state.state == 'Music' %}
            script.input_music
          {% elif trigger.to_state.state == 'AUS' %}
            script.turn_off_tv_livingroom
          {% endif %}

- alias: "Play selected source on sonos"
  initial_state: 'on'
  trigger:
    - entity_id: input_select.sonos_source
      platform: state
      from: 'SELECT'
  condition:  
   condition: state
   entity_id: group.all_speaker
   state: 'on'    
  action:
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.living_room
      shuffle: true
  - data_template:
      source: "{{ trigger.to_state.state }}"
    entity_id: media_player.living_room
    service: media_player.select_source
  - service: input_select.select_option
    data:
      entity_id: input_select.sonos_source
      option: 'SELECT'

- alias: "Play selected source on sonos + sonos"
  initial_state: 'on'
  trigger:
    - entity_id: input_select.sonos_source
      platform: state
      from: 'SELECT'
  condition:  
   condition: state
   entity_id: group.all_speaker
   state: 'off'    
  action:
  - service: homeassistant.turn_on
      entity_id: group.all_speaker
  - delay:
      seconds: 35
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.living_room
      shuffle: true
  - data_template:
      source: "{{ trigger.to_state.state }}"
    entity_id: media_player.living_room
    service: media_player.select_source
  - service: input_select.select_option
    data:
      entity_id: input_select.sonos_source
      option: 'SELECT'

- alias: Speaker - Adjust Volume
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.sonos_speaker
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room
        volume_level: '{{ trigger.to_state.state }}'

- alias: Speaker - Update Volume slider
  initial_state: 'off'
  trigger:
    platform: state
    entity_id: media_player.living_room
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.sonos_speaker
        value: '{{ states.media_player.living_room.attributes.volume_level }}'

- alias: 'Media: Pause AppleTV if SONOS is used'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.living_room
    from: 'paused'
    to: 'playing'
  condition:
    - condition: state
      entity_id: media_player.wohnzimmer
      state: 'playing'
  action:
    - service: media_player.media_pause
      entity_id: media_player.wohnzimmer

- alias: 'Media: Auto standby is Sonos is paused for 10 minutes'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.living_room
    from: 'playing'
    to: 'paused'
    for:
        minutes: 10
  action:
    - service: homeassistant.turn_off
      entity_id: group.all_speaker

- alias: 'Media: Pause SONOS if AppleTV is used'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.wohnzimmer
      from: 'paused'
      to: 'playing'
  condition:
    - condition: state
      entity_id: media_player.living_room
      state: 'playing'
  action:
    - service: media_player.media_pause
      entity_id: media_player.living_room

- alias: 'Media: Play Radio when someone arrives at home'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.personen
    from: 'not_home'
    to: 'home'
  condition:
    - condition: time
      after: '08:00'
      before: '23:00'
  action:
    - service: script.sonos_play_radio

- alias: 'Media: Turn on radio in the morning'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: light.bad
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: light.kueche1
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: light.eingang
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: '07:00'
      before: '10:00'
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
    - condition: state
      entity_id: switch.tv
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: group.all_speaker
        state: 'off'
      - condition: state
        entity_id: media_player.living_room
        state: 'paused'
  action:
    - service: script.sonos_play_radio
      data:
        variables:
          volume: 0.1

- alias: 'Media: Turn on AppleTV on short press'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_158d0001d8795f
      click_type: single
  condition:
    condition: state
    entity_id: switch.tv
    state: 'off'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.tv_mode
      option: AppleTV

- alias: 'Media: Pause AppleTV on short press'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_158d0001d8795f
      click_type: single
  condition:
    condition: state
    entity_id: switch.tv
    state: 'on'
  action:
    - service: media_player.media_pause
      entity_id: media_player.wohnzimmer

- alias: 'Media: Turn off TV on long press'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_158d0001d8795f
      click_type: long_click_press
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.tv_mode
      option: AUS
