- alias: 'Power off all'
  hide_entity: True
  trigger:
      platform: time
      at: '03:00'
  action:
    - service: script.turn_off_all


- alias: 'Update Available Notifications'
  hide_entity: True
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    - service: notify.ios_iphones
      data:
        title: 'Update'
        message: 'Update for Home Assistant is available.'

# Inspired by https://community.home-assistant.io/t/logger-set-level/14267
- alias: 'Log Level'
  trigger:
    platform: state
    entity_id: input_select.log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: "{{ trigger.to_state.state }}"


# automations for the fan
- alias: 'Activate Fan auto off'
  trigger:
    platform: state
    entity_id: switch.ventilator
    to: 'on'
  action: 
    - service: script.turn_on
      entity_id: script.turn_off_fan_after_delay

- alias: 'Deactivate fan auto off'
  trigger:
    platform: state
    entity_id: switch.ventilator
    to: 'off'
  action: 
    - service: script.turn_off
      entity_id: script.turn_off_fan_after_delay 

- alias: 'Startup'
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: switch.turn_on
      entity_id: switch.sonos_speaker
    # - service: input_select.select_option
    #   data:
    #     entity_id: input_select.tv_mode
    #     option: AppleTV


# Inspired by https://community.home-assistant.io/t/failed-login-detection/4280/20
# - alias: "Send notification upon failed login attempt"
#   trigger:
#     - platform: state
#       entity_id: persistent_notification.httplogin
#   condition:
#     - condition: template
#       value_template: "{{ trigger.to_state.state != None }}"
#   action:
#     - service: notify.ios_iphones
#       data:
#         title: "Failed login!"
#         message: '{{ trigger.to_state.state }}'