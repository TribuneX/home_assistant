- alias: "Robot: Robot started cleaning"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: vacuum.vacuum_cleaner
      from: "docked"
      to: "cleaning"
  action:
    - service: notify.devices_user_1
      data:
        title: "Robot"
        message: "Robot started to clean!"

#- alias: "Robot: Robot stopped cleaning"
#  initial_state: "on"
#  trigger:
#    - platform: state
#      entity_id: vacuum.vacuum_cleaner
#      from: "returning"
#      to: "docked"
#  action:
#    - service: notify.devices_user_1
#      data:
#        title: "Robot"
#        message: "Cleanup successful after {{'%.2f'|format|states('sensor.vacuum_cleaner_current_clean_duration')| int / 60)}} minutes."
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.cleaned_today

- alias: "Robot: Robot cleanup if nobody is home"
  initial_state: "on"
  trigger:
    - platform: time
      at: "11:00"
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - mon
          - wed
          - sat
      - condition: state
        entity_id: input_boolean.cleaned_today
        state: "off"
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: "off"
  action:
    - service: vacuum.start
      entity_id: vacuum.vacuum_cleaner

- alias: "Robot: Reset cleaned today counter"
  initial_state: "on"
  trigger:
    - platform: time
      at: "01:00:00"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.cleaned_today
