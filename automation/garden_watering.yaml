- alias: "Garden Watering: Turn on watering"
  trigger:
    platform: time
    at: "08:00"
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - mon
          - thu
          - sat
      - condition: numeric_state
        entity_id: sensor.openweathermap_forecast_precipitation
        below: 5
  action:
    - service: notify.devices_user_1
      data_template:
        title: "Watering"
        message: "Garden Watering started"
    - service: script.watering_garden
      data:
        rasen_period: "{{ states('input_select.rasen_water_time') }}"
        blumenbeet_period: "{{ states('input_select.blumenbeet_water_time') }}"
        hecke_period: "{{ states('input_select.hecke_water_time') }}"
        rasen_klein_period: "{{ states('input_select.rasen_klein_water_time') }}"
    - service: notify.devices_user_1
      data_template:
        title: "Watering"
        message: "Garden Watering finished"

- alias: "Garden Watering: Switch to next output target"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: switch.garden_water_valve
      to: "off"
  condition: []
  action:
    - service: input_select.select_next
      data:
        cycle: true
      target:
        entity_id: input_select.garden_water_zone
  mode: single

- alias: "Garden Watering: Reset Auto off timer"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: switch.garden_water_valve
      to: "on"
  condition: []
  action:
    - service: number.set_value
      data:
        value: 60
      target:
        entity_id: number.garden_water_time_left
  mode: single
